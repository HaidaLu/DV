{"message":"unused variable: `st_b`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"tests/testSarcad.rs","byte_start":383,"byte_end":387,"line_start":19,"line_end":19,"column_start":16,"column_end":20,"is_primary":true,"text":[{"text":"    let (st_a, st_b) = EtH::initall();","highlight_start":16,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"tests/testSarcad.rs","byte_start":383,"byte_end":387,"line_start":19,"line_end":19,"column_start":16,"column_end":20,"is_primary":true,"text":[{"text":"    let (st_a, st_b) = EtH::initall();","highlight_start":16,"highlight_end":20}],"label":null,"suggested_replacement":"_st_b","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `st_b`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtests/testSarcad.rs:19:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let (st_a, st_b) = EtH::initall();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_st_b`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `new_st_a`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"tests/testSarcad.rs","byte_start":552,"byte_end":560,"line_start":24,"line_end":24,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"    let (new_st_a, ct) = EtH::send(st_a, &iv, message.as_bytes());","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"tests/testSarcad.rs","byte_start":552,"byte_end":560,"line_start":24,"line_end":24,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"    let (new_st_a, ct) = EtH::send(st_a, &iv, message.as_bytes());","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":"_new_st_a","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `new_st_a`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtests/testSarcad.rs:24:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let (new_st_a, ct) = EtH::send(st_a, &iv, message.as_bytes());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_new_st_a`\u001b[0m\n\n"}
{"message":"unused variable: `new_st_a`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"tests/testSarcad.rs","byte_start":1160,"byte_end":1168,"line_start":44,"line_end":44,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"    let (new_st_a, ct) = EtH::send(st_a, &iv, message.as_bytes());","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"tests/testSarcad.rs","byte_start":1160,"byte_end":1168,"line_start":44,"line_end":44,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"    let (new_st_a, ct) = EtH::send(st_a, &iv, message.as_bytes());","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":"_new_st_a","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `new_st_a`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtests/testSarcad.rs:44:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let (new_st_a, ct) = EtH::send(st_a, &iv, message.as_bytes());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_new_st_a`\u001b[0m\n\n"}
{"message":"unused variable: `new_st_b`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"tests/testSarcad.rs","byte_start":1226,"byte_end":1234,"line_start":45,"line_end":45,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let(new_st_b, pt) = EtH::receive(st_b, &iv, ct.as_slice());","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"tests/testSarcad.rs","byte_start":1226,"byte_end":1234,"line_start":45,"line_end":45,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let(new_st_b, pt) = EtH::receive(st_b, &iv, ct.as_slice());","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"_new_st_b","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `new_st_b`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtests/testSarcad.rs:45:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let(new_st_b, pt) = EtH::receive(st_b, &iv, ct.as_slice());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_new_st_b`\u001b[0m\n\n"}
{"message":"unused variable: `sec_st_a`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"tests/testSarcad.rs","byte_start":1819,"byte_end":1827,"line_start":64,"line_end":64,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"    let (sec_st_a, ct2) = EtH::send(new_st_a, &iv, message2.as_bytes());","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"tests/testSarcad.rs","byte_start":1819,"byte_end":1827,"line_start":64,"line_end":64,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"    let (sec_st_a, ct2) = EtH::send(new_st_a, &iv, message2.as_bytes());","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":"_sec_st_a","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `sec_st_a`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtests/testSarcad.rs:64:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let (sec_st_a, ct2) = EtH::send(new_st_a, &iv, message2.as_bytes());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_sec_st_a`\u001b[0m\n\n"}
{"message":"unused variable: `sec_st_a`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"tests/testSarcad.rs","byte_start":1955,"byte_end":1963,"line_start":66,"line_end":66,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let(sec_st_a, pt2) = EtH::receive(new_st_b, &iv, ct2.as_slice());","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"tests/testSarcad.rs","byte_start":1955,"byte_end":1963,"line_start":66,"line_end":66,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let(sec_st_a, pt2) = EtH::receive(new_st_b, &iv, ct2.as_slice());","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"_sec_st_a","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `sec_st_a`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtests/testSarcad.rs:66:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let(sec_st_a, pt2) = EtH::receive(new_st_b, &iv, ct2.as_slice());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_sec_st_a`\u001b[0m\n\n"}
{"message":"unused variable: `sec_st_a`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"tests/testSarcad.rs","byte_start":2811,"byte_end":2819,"line_start":91,"line_end":91,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"    let (sec_st_a, ct2) = EtH::send(new_st_b, &iv, message2.as_bytes());","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"tests/testSarcad.rs","byte_start":2811,"byte_end":2819,"line_start":91,"line_end":91,"column_start":10,"column_end":18,"is_primary":true,"text":[{"text":"    let (sec_st_a, ct2) = EtH::send(new_st_b, &iv, message2.as_bytes());","highlight_start":10,"highlight_end":18}],"label":null,"suggested_replacement":"_sec_st_a","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `sec_st_a`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtests/testSarcad.rs:91:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let (sec_st_a, ct2) = EtH::send(new_st_b, &iv, message2.as_bytes());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_sec_st_a`\u001b[0m\n\n"}
{"message":"unused variable: `sec_st_a`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"tests/testSarcad.rs","byte_start":2883,"byte_end":2891,"line_start":92,"line_end":92,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let(sec_st_a, pt2) = EtH::receive(new_st_a, &iv, ct2.as_slice());","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"tests/testSarcad.rs","byte_start":2883,"byte_end":2891,"line_start":92,"line_end":92,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    let(sec_st_a, pt2) = EtH::receive(new_st_a, &iv, ct2.as_slice());","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":"_sec_st_a","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `sec_st_a`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mtests/testSarcad.rs:92:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let(sec_st_a, pt2) = EtH::receive(new_st_a, &iv, ct2.as_slice());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_sec_st_a`\u001b[0m\n\n"}
{"message":"crate `testSarcad` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"tests/testSarcad.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case: `test_sarcad`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: crate `testSarcad` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: convert the identifier to snake case: `test_sarcad`\u001b[0m\n\n"}
{"message":"9 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 9 warnings emitted\u001b[0m\n\n"}
